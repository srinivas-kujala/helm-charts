# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: application
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 2024.02.18.1

namespace: global-dev

imagePullSecrets: [name: acr-secret]
nameOverride: "application-deployment"
fullnameOverride: "application-app"

logvolumes:
  name: krakenslogs
  mountPath: 'C:\Logs\' 
  claimName: titansvolumeclaimlogs

Certificates:
  enabled: true
  volumename: certvolume
  mountpath: C:\Certificates\
  claimName: certfileshareclaim
  env:
  - name: ASPNETCORE_ENVIRONMENT
    value: Production
  - name: ASPNETCORE_URLS
    value: https://+:443;http://+:80
  - name: ASPNETCORE_Kestrel__Certificates__Default__Path
    value: C:\Certificates\localhost.pfx
  envname: ASPNETCORE_Kestrel__Certificates__Default__Password
  secretname: cert-secret
  secretkey: certpassword

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: 
    windowsOptions:
      gmsaCredentialSpecName: aks-gmsa-spec
      runAsUserName: "NT AUTHORITY\\SYSTEM"
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  name: application-svc
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      protocol: TCP
    - name: https
      port: 443
      protocol: TCP
  annotations: 
    service.beta.kubernetes.io/azure-load-balancer-internal: true
  livenessProbe:
    enabled: true
    httpGet:
      path: /Swagger/Index.html
      port: 80
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 20
  readinessProbe:
    enabled: true
    httpGet:
      path: /Swagger/Index.html
      port: 80
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 20
    
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:
  kubernetes.io/os: windows

hostAliases:
  enabled: true
  values:
  - ip: 127.0.0.1
    hostnames: localhost

tolerations: []

affinity: {}